{"version":3,"sources":["classes/Caisse.ts","classes/EtatDuCompte.ts","classes/NbreTransaction.ts","classes/RapportsTransactions.ts","classes/Solde.ts","classes/Transaction.ts","app.ts"],"names":[],"mappings":";;;;;;AMAA,IAAA,QAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;AACA,IAAA,cAAA,GAAA,OAAA,CAAA,wBAAA,CAAA;;AACA,IAAA,iBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,gCAAA,CAAA;ILAa,ACAA,AECA,ACJA;ACIb,ALCI,ACGA,AEFA,ACLA,ICGJ,OAAA,GAAA,ELCgB,CGCA,IEFhB,CAAA,ALCI,CGCA,ACJY,CJGe,CGCA,EFEf,AGPZ,EAEY,IHKZ,EAA2B,CGP3B,EAGY,CCAhB,CAAA,CDHI,EAIY,MAJZ,EAI0B;AJAC,ACGA,AEFA,ACDD;ACA9B,IAAA,aAAA,GAAA,OAAA,CAAA,uBAAA,CAAA,EAEA;ALDQ,ACGA,AEFA,ACLQ,SJIH,ACGA,AEFA,ACLG,IAAA,GAAA,CJIR,CGCA,EHDgB,AIJR,CDKS,KFEjB,EDHwB,CAAC,ACGA,AEFA,CAAC,OFEO,CAAC,IDHlB,CAAuB,AGCtB,CAAuB,MHDxB,CAAhB,ACGyB,CAAuB,AEF/B,CAAjB,aFEyB,CAAzB;ADFA,ACGA,AEFA,ACLQ,IJIR,AGCA,KFEK,AGPG,CJIF,AGCA,CHDC,AGCA,KCLC,GAAA,CJIR,AGCA,CHDiB,AGCA,IHDjB,AGCA,CCLQ,CHOR,GAA0B,QAAQ,CAAC,aAAT,CAAuB,eAAvB,CAA1B;AIFR,ALAK,ACGG,AEFH,ACLW,ICIV,ANJO,AEOL,ACRK,IGKH,CDJM,CHOF,CIHD,AJGE,CGPC,GAAA,GAAA,CCIK,CAAC,AJGd,CAAiB,IAAjB,QIHK,CAAuB,4BAAvB,CAAb,EACA;ANYI,AETC,ACNH,AEDc,SAAA,MAAA,GLiBA,AKjBA,KLgBZ,CKhBY,CLkBA,OGjBF,IHeV,EAEsC,AGjBxC,EAA0B;AGI5B,ANa0C,AGjBd,AEAnB,ICIH,6BAA6B,GAAG,QAAQ,CAAC,aAAT,CAAuB,gCAAvB,CAAtC,EACA;;AACA,ANUgB,AGfZ,IGKE,KNUU,AGfP,EFEL,AGCA,GJYY,GAAA,KAAA,KCbL,AGCA,GDHP,EGK8B,CLH9B,AEF6B,ACG7B,EEEiC,ALHX,AGCA,MDHe,CAAC,CGKG,CAAC,WHLb,CAAuB,CGKnB,CAAuB,sBHL3B,CAA7B,OGKiC,CAArC,EACA;ANUgB,ACZT,AEHH,ACGI,IDHJ,KHeY,CCZL,AEHD,CDON,ACPO,ACGE,KHAI,CAAC,GDYF,AGfZ,ACGI,CDHa,ACGE,EJYP,EGfZ,EDOO,GDJA,AGAH,GFIJ,AEJ+B,CJYnB,CCZoB,ACIX,CDJlB,EAAiC,CGAC,CAAC,QAAP,GAAkB,QAAlB,EAA3B;AEGR,ANRY,ACMD,ACOH,ACVL,ACIE,IECD,KNRQ,CEaA,CGZR,CCOQ,CLFI,EKED,GNRH,CMQO,ENRK,ACMb,CDNC,ACMa,ECOC,GILP,AJKU,AGZrB,CCOW,GLFR,ECOwB,CILpB,ALFsB,ACOD,CILV,CAAX,EAAc,EAAd,CAAf,ILFW,CCOkB,EAArB;AIJR,ANRY,ACMJ,ACOA,AGZA,ICOJ,GLJG,EDJK,CEaA,EILA,CLFC,EKEE,ELFE,EKEE,ANRP,GAAa,CAAb,ACMW,AILL,CJKM,CCOG,CILR,CAAA,CJKW,AGZP,ICOR,CAAU,CJKW,CAAC,AGZ7B,EJKS,IKEF,CAAf,ELF4C,CAA/B,EAAkC,CCOjB,EAAtB,CALiB,CAOrB,YGduC,KAAK,IAAL,KAAc,OAAd,GAAwB,SAAxB,GAAoC,QAAvE,kBAAuF,KAAK,GAA5F,yBAA2G,KAAK,MAAhH;ACQR,ANRY,ACMD,ACSP,AGdC,ICOD,KNRQ,ICMI,KDNJ,CMQO,ENRkB,ACM1B,CKEW,ALFG,CDNb,GMQc,KLFf,GAA0B,KAA1B,CKEe,CAAA,IAAJ,CAAS,QAAT,CAAtB;AACA,ANQS,ACVD,ACSJ,IIPA,GLJS,MAEC,QKEO,GAAG,IAAI,iBAAA,CAAA,eAAJ,CAAoB,QAApB,CAAxB;AACA,ALFW,ACUP,IIRA,OHPF,EFKc,QAAL,CAAc,EKED,GAAG,AHPlB,IGOsB,ALFpB,EELT,CFKmC,CELd,SFKZ,SKEoB,CAAA,oBAAJ,CAAyB,QAAzB,CAA3B,EAEA;ALHS,ACUL,ACfA,UAAI,CEFJ,WFEgB,GAAG,MAAM,CAAC,AEFjB,cFEU,EAAnB;AGSJ,AJOI,ACfA,ACTJ,ACOQ,ICUF,GFjBN,CEiBU,AFjBV,EDSQ,CGQK,EFjBb,ACOe,GDPf,ECOoB,CCUC,CAAC,CFjBtB,ACOQ,EFEa,GAAG,EAApB,KGQS,CAAuB,OAAvB,CAAb;AACA,ALJQ,ACWJ,AGjBC,ICUC,GAAG,GAAG,CNbR,ACSS,OKIO,CAAC,ALJb,CAAc,SAAd,CDTM,EMaF,ALJsB,CKIC,ANb/B,EAAwB,ECSW,EKI3B,CAAZ,KLJkC,CAAc,SAAxC,CATkB,CAWlB;AKGR,ANbQ,ACWC,ACUL,ACpBmB,IGYjB,OAAO,ANbA,GMaG,MNbR,CAAe,CMaC,CAAC,ENbjB,CAAoB,GAApB,OMaQ,CAAuB,UAAvB,CAAhB,CHTqB,YAHE;AGavB,ANbK,ACWA,ACUD,ACrBmB,IGajB,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,SAAvB,CAAf,EACA;AJQI,WGpBA,sBAAU;ACad,AJQI,ACvBmB,AEGhB,ICYD,EAAE,GAAG,IDZI,ICYI,CAAC,ADZA,OAAb,MCYI,CAAuB,IAAvB,CAAX,EAEA;AJOI,ACxBmB,AEIlB,WLHD,qBAAY,GAAZ,EAA0B;AMiB9B,ANhBQ,AEuBJ,ACzBmB,IGkBnB,CAAC,KNhBO,IGCG,CHDE,CGFM,EHEH,GMgBpB,CAAsB,CNhBG,OMgBzB,EAAgC,ANhBZ,CAAe,OAAf,CAAuB,CMgBV,CAAD,CNhBZ,CMgByB,ANhBrC;AMiBJ,ANhBI,AEuBJ,ACtBE,EGeF,CAAC,CAAC,ONhBO,GGCH,GAAG,CGeT,ENhBI,AGCQ,CHDO,MAAf,CAAsB,KAAtB,AGCqB,CAAC,CHDO,CAA7B,IGCQ,CAAqB,UAAC,CAAD;AGgBnC,ANhBE,ACZJ,ACmCI,ACvBiC,MGgB/B,CL5BN,CAAA,GIaI,CJbJ,GAAA,IAAA,AEY4C,CAAC,CGgBxB,AHhByB,GGgBtB,CHhBoB,GGgBhB,EHhB2B,AEC5C,EFD8C,CAAC,QGgB9B,CAAA,AHhB2B,EAAlB,SGgBb,CAClB,IAAI,CAAC,KADa,EAElB,OAAO,CAAC,aAFU,EAGlB,GAAG,CAAC,KAHc,EAIlB,MAAM,CAAC,KAJW,CAAtB;AAMA,AHtBmC,AEE7B,ECoBN,QAAQ,CAAC,AHtBK,EAAuD,AEEvD,KAAK,CFFf,GEEE,KCoBN,CAA0B,eAA1B;AACA,AJCM,AGrBH,ECoBH,QAAQ,CAAC,AJCE,aIDX,GAT2C,CAW3C,AJDM,CAAuB,SAAvB,GAAmC,cAAc,CAAC,QAAf,EAAnC;AACA,ACxBF,WHAF,AEwBS,GCxBH,GAAG,KAAK,CAAZ,EAAe,IDwBb,CAAwB,OFxBd,EEwBV,GAAoC,eAAe,CAAC,QAAhB,EAApC;AICN,ANzBgB,AEyBb,ACxBG,MGwBA,MAAM,GAAG,CHxBL,QGwBJ,AHxBY,GAAG,GGwBN,CAAC,EAAD,EAAiB,SAAjB,EAAgD,GNxBvC,KAAK,SADb;AM0Bd,AN1Bc,AGER,QGwBF,EAAE,GAAG,CHxBH,IAAI,EAAE,CGwBK,CAAC,AHxBJ,CAAC,SAAH,EADO,CGyBV,CAAuB,IAAvB,CAAT;AACA,AHxBM,QGwBF,EAAE,GAAG,CHxBH,KAAK,EGwBM,AHxBJ,CGwBK,CHxBH,CAAC,OAAH,IGwBJ,CAAuB,EHxBF,EGwBrB,CAAT,IHxBa,GAA2B,EAAE,CAAC,UAAH,EAA3B,GAA6C,CAFvC;AG2BnB,AN5Bc,AGIR,QGwBF,CAAC,GAAG,EHxBF,MGwBU,AHxBJ,CGwBK,CHxBH,EAAE,CAAC,OAAH,EGwBN,CAAuB,GAAvB,CAAR,AHxB+B,QAAjB,GAA4B,EAAE,CAAC,UAAH,EAA5B,GAA8C;AG0B5D,AN7BI,AGAe,AEjBvB,IC8CI,EAAE,CAAC,AD9CP,CAAA,KFiBQ,GG6BJ,GAAe,AD9CnB,EC8CqB,CAAC,AD9CtB,OC8CmB,ID9CnB,GC8CoC,OAAjB,GAA2B,OAA3B,GAAqC,IN7Bd,IM6BtC;AACA,AN9BsC,AGKlC,IGyBJ,EAAE,CAAC,KHzBC,EHLW,EM8Bf,CN9BsC,EM8BvB,EAAE,CAAC,GHzBD,CAAC,GGyBH,CHzBX,CGyBJ,AHzBuB,QAAnB;AG0BJ,AN9BO,AEfX,ACoBO,IGyBH,EAAE,CAAC,AJ7CP,CAAA,EFeW,CGFL,EHEQ,CAAC,EM8BX,CHzBS,EGyBM,CN9BR,CM8BU,AN9BC,CM8BA,CJ7CtB,EFeW,CEfX,GI6CmB,EAAf,UJ7CJ;AI8CI,AN9BI,AGKA,IGyBJ,CAAC,CAAC,SAAF,CHzBQ,EGyBM,EAAE,CAAC,AHzBJ,GAAG,CGyBF,EAAd,UHzB6B,CAAC,SAAd,CACV,UAAC,OAAD;AGyBN,ANlCc,AGSR,IGyBN,EAAE,CAAC,MAAH,CAAU,EAAV,KHzBmB,OAAO,CAAC,IAAR,KAAiB,EAAE,CAAC,SAAH,EAA9B;AG0BN,ANnCc,AGSR,IG0BN,EAAE,CAAC,MAAH,AH3BgB,CG2BN,AH3BN,CG2BJ;AACA,ANpCc,IMoCd,EAAE,CAAC,MAAH,CAAU,EAAV;AACA,ANrCc,AGWV,IG0BJ,SAAS,CAAC,EH1BF,EAAE,CAAC,CG0BX,CAAiB,EAAjB,GH1BQ,OAAiB,OAArB,EAA8B;AG2BnC,ANtCe,AGYR,GGaR,CAZ2C,CA0B3C,SH3BQ,aAAa,CAAC,KAAD,CAAb,CAAqB,KAArB,IAA4B,EAAE,CAAC,UAAH,EAA5B;AHRN,AGUK,aAHD,MAGO;AACL,cAAA,aAAa,CAAC,KAAD,CAAb,CAAqB,MAArB,IAA8B,EAAE,CAAC,UAAH,EAA9B;AGyBR,AHvBO,MGuBD,KAAK,GAAG,CAAd;AACA,AHvBK,EGuBL,OAAO,CAAC,CN/BN,YM+BF,GAAwB,KAAxB,MN/BgB;AMgChB,AN/BM,AGhBe,EG+CrB,GAAG,CAAC,KAAJ,EN/Ba,CM+BD,EAAZ,EN/BkB,WAAZ;AMgCN,AN/BG,EM+BH,MAAM,CAAC,KAAP,GAAe,EAAf;AACA,AH9CE,EG8CF,MAAM,CAAC,eAAD,EAAkB,EAAlB,CAAN,+BH9CiC;AG+ClC,AH/CkC,CGenC,GAmCA;AH7BK,WHND,oBAAQ;AMoCZ,ANnCQ,AGnBe,aHmBR,KAAK,KAAZ,MMmCqB,CAAC,gBAA9B,CAA+C,OAA/C,EAAwD,YAAK;AAC3D,ANnCG,AGpBkB,MGuDjB,4BAA4B,CAAC,SAA7B,CAAuC,QAAvC,CAAgD,YAAhD,CAAJ,EAAmE;AACjE,AHxDmB,IGwDnB,4BAA4B,CAAC,SAA7B,CAAuC,MAAvC,CAA8C,YAA9C;AAED,AH1DoB,GGuDrB,MAGO,IAAI,4BAA4B,CAAC,SAA7B,CAAuC,QAAvC,CAAgD,YAAhD,CAAJ,EAAmE,CAEzE,CAFM,MAGP,4BAA4B,CAAC,SAA7B,CAAuC,MAAvC,CAA8C,YAA9C;AACD,AH9DsB,CGsDvB,UNjCI,yBAAa;AACT,aAAO,KAAK,KAAZ;AACH,AGED,WAAK,qBAAL,CAA2B,SAA3B;;AAKA,wCAAoB,aAApB,oCAAmC;AAA9B,WHNL,CGMS,OAAO,kBHNC,GGMZ,QHNL,EAAyC;AACrC,AGMF,WHNO,CGMH,GAAG,GAAG,IHNR,CAAiB,GGMD,CHNhB,AGMiB,CHNK,WAAtB,CGMQ,CAAuB,IAAvB,CAAV;AACA,YAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAb;AHNE,AGOF,QAAA,EHPM,IGOA,CAAC,MHPU,CAAC,EGOlB,GAAmB,EHPb,MGON,CHPgC,OAA9B,EAAuC;AACnC,AGON,YAAI,CHPO,IGOF,CHPH,EGOM,EHPQ,MGOA,CAAC,IHPU,CAAC,QGOpB,CAAuB,CHPf,EAAd,CGOM,CAAZ;AHNM,AGON,QAAA,KHPW,AGON,CAAC,QHPA,CGON,GAAkB,OAAlB;AHNG,AGOH,OHVE,CGUF,GAAG,CAAC,CHPK,QGOT,GAAgB,OAAO,CAAC,IAAxB;AHNM,AGON,QAAA,KHPW,CGOL,CAAC,GHPD,IAAc,EGOpB,GAAmB,MHPY,CAAC,AGON,CAAC,MAAR,CAAe,EHPd,EAAd,IGOa,EAAnB;AHNM,AGON,QAAA,KHPW,AGON,CAAC,SHPA,AGON,GAAkB,OAAO,CAAC,KAAR,CAAc,QAAd,EAAlB;AHNG,AGOH,YAAI,EAAE,GAAG,QAAQ,CAAC,aAAT,CAAuB,IAAvB,CAAT;AACA,QAAA,EAAE,CAAC,MAAH,CAAU,GAAV;AHRI,AGSJ,MHTI,EGSJ,EAAE,CAAC,EHTQ,CAAC,GAAR,AGSJ,CHTgB,AGSN,MAAV,IHTI,EAAwB,KAAK,KAA7B;AACF,AGSF,QAAA,EAAE,CHTK,AGSJ,MAAH,CAAU,KAAV,EHTE;AACH,AGSC,MHPF,OGOO,qBAAL,CAA2B,MAA3B,CAAkC,EAAlC;AHNF,AGOC;AHND,AGOD;AHNC;AAEA;AACA;AACA;AACA;AACA,AGrDJ,OAAA,CAAA,oBAAA,GAAA,oBAAA;AHsDI;AACA;;;;WACA,wBAAY;AACR,aAAO,KAAK,SAAZ;AACH;;;WACD,yBAAa;AACT,aAAO,KAAK,UAAZ;AACH;;;;;;AA5DL,OAAA,CAAA,MAAA,GAAA,MAAA","file":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["import { IObserver } from \"../interfaces/Observer\";\r\nimport { ISubject } from \"../interfaces/Subject\"\r\nimport { Transaction } from \"./Transaction\"\r\n\r\nexport class Caisse implements ISubject {\r\n  \r\n    private NbreDebit = 0\r\n    private NbreCredit = 0\r\n    private observers: IObserver[] = [];\r\n    subscribe(obs: IObserver) {\r\n        this.observers.push(obs)\r\n    }\r\n    unsubscribe(obs: IObserver) {\r\n        let index = this.observers.indexOf(obs)\r\n        this.observers.splice(index, 1)\r\n   }\r\n    notifyObserver() {\r\n        for (const elm of this.observers) {\r\n           elm.update(this)\r\n       }\r\n   }\r\n    constructor(\r\n        private solde: number,\r\n        private transaction: Transaction[],\r\n       \r\n    ) { }\r\n    getTransaction() {\r\n        return this.transaction\r\n    }\r\n    getSolde() {\r\n        return this.solde\r\n    }\r\n    getEtatCompte() {\r\n        return this.solde\r\n    }\r\n    AjoutTransaction(transaction: Transaction) {\r\n        this.transaction.push(transaction)\r\n        if (transaction.getType() === 'Debit') {\r\n            this.solde += transaction.getMontant()\r\n            this.NbreDebit++;\r\n        } else {\r\n            this.solde -= transaction.getMontant()\r\n            this.NbreCredit++;\r\n        } console.log(\"Solde : \", this.solde);\r\n        this.notifyObserver();\r\n    }\r\n\r\n    // EtatCompte(transaction: Transaction) {\r\n    //     this.transaction.push(transaction)\r\n    //     if (this.solde < 0) {\r\n    //      console.log( 'CREDITEUR');  \r\n            \r\n    //     } else if (this.solde === 0){ \r\n    //        console.log('NULL'); \r\n    //     } else { \r\n    //         console.log('DEBITEUR'); \r\n    //      } \r\n    //     this.notifyObserver();\r\n    // }\r\n    getNbreDebit() {\r\n        return this.NbreDebit\r\n    }\r\n    getNbreCredit() {\r\n        return this.NbreCredit\r\n    }\r\n}","import { IObserver } from \"../interfaces/Observer\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class Etat implements IObserver{\r\n    private viewEtat : HTMLDivElement\r\n    constructor(caisse : Caisse) {\r\n        this.viewEtat = document.querySelector(\"#etat\")!\r\n        caisse.subscribe(this)\r\n    }\r\n    update(caisse : Caisse) {\r\n       \r\n       if (caisse.getEtatCompte() < 0 ) {\r\n           this.viewEtat.innerText = 'CREDITEUR'\r\n       }else if (caisse.getEtatCompte() === 0) {\r\n           this.viewEtat.innerText = 'NUL'\r\n       } else {\r\n           this.viewEtat.innerText = 'DEBITEUR'\r\n        }\r\n        this.viewEtat.className = this.viewEtat.innerText;\r\n       \r\n        // this.viewEtat.innerText = caisse.getEtatCompte() < 0 ? 'DEBITEUR' : 'CREDITEUR')\r\n         // this.viewEtat.innerText = caisse.getEtatCompte();\r\n    }\r\n}","import { IObserver } from \"../interfaces/Observer\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class NbreTransaction implements IObserver {\r\n    \r\n    private htmlNbreDebitView: HTMLTableCellElement\r\n    private htmlNbreCreditView: HTMLTableCellElement\r\n\r\n    constructor(caisse : Caisse) {\r\n        this.htmlNbreDebitView = document.querySelector('#nbreDeDebit')!\r\n        this.htmlNbreCreditView = document.querySelector('#nbreDeCredit')!\r\n        caisse.subscribe(this)\r\n    }\r\n    \r\n    \r\n    update(caisse: Caisse): void {\r\n\r\n      \r\n       \r\n        var NbreTotalDebit = caisse.getNbreDebit()\r\n        var NbreTotalCredit = caisse.getNbreCredit()\r\n        \r\n    //     if (NbreTotalDebit !== 0 ) {\r\n    //           NbreTotalDebit = (compteur.filter((tr) => tr.getType() === \"Debit\").length); \r\n    //     } else {\r\n              \r\n    //     }\r\n    //     if (NbreTotalCredit !== 0 ) {\r\n    //         NbreTotalCredit = (compteur.filter((tr) => tr.getType() === \"Debit\").length); \r\n    //   } else {\r\n            \r\n    //   }\r\n    //  for (let tr of compteur) {\r\n    //         if (tr.getType() === 'Debit') {\r\n    //         NbreTotalDebit++\r\n    //         } else {\r\n    //          NbreTotalCredit++\r\n    //         }\r\n    //     }\r\n        this.htmlNbreDebitView.innerText = NbreTotalDebit.toString();\r\n        this.htmlNbreCreditView.innerText = NbreTotalCredit.toString();\r\n    }\r\n}","import { IObserver } from \"../interfaces/Observer\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class RapportsTransactions implements IObserver {\r\n  private htmlRapportsContainer: HTMLTableElement;\r\n\r\n  constructor(caisse: Caisse) {\r\n    this.htmlRapportsContainer = document.querySelector(\"#transactionParEmploye\")!;\r\n    caisse.subscribe(this);\r\n  }\r\n\r\n  update(caisse: Caisse): void {\r\n    let transactions = caisse.getTransaction();\r\n    let rapportsArray = [];\r\n    for (const tr of transactions) {\r\n      let how = rapportsArray.filter((e) => e.name === tr.otherText()).length;\r\n      if (how === 0) {\r\n        let employee = {\r\n          name: tr.otherText(),\r\n          debit: tr.getType() === \"Debit\" ? tr.getMontant() : 0,\r\n          credit: tr.getType() === \"Credit\" ? tr.getMontant() : 0,\r\n        };\r\n        rapportsArray.push(employee);\r\n      } else {\r\n        let index = rapportsArray.findIndex(\r\n          (element) => element.name === tr.otherText()\r\n        )\r\n        if (tr.getType() === \"Debit\") {\r\n          rapportsArray[index].debit+=tr.getMontant(); \r\n        \r\n        } else {\r\n          rapportsArray[index].credit+= tr.getMontant();\r\n\r\n        }\r\n      }\r\n    }\r\n    this.htmlRapportsContainer.innerHTML = `<tr>\r\n        <th>PERSONNELS</th>\r\n        <th>CREDIT</th>\r\n        <th>DEBIT</th>\r\n      </tr>`;\r\n    for (let rapport of rapportsArray) {\r\n      let nom = document.createElement(\"td\");\r\n      let CrediT = document.createElement(\"td\");\r\n      CrediT.className = 'Credit'\r\n      let DebiT = document.createElement(\"td\");\r\n      DebiT.className = 'Debit'\r\n      nom.innerText = rapport.name;\r\n      CrediT.innerText = rapport.credit.toString();\r\n      DebiT.innerText = rapport.debit.toString();\r\n      let tr = document.createElement(\"tr\");\r\n      tr.append(nom);\r\n      tr.append(CrediT);\r\n      tr.append(DebiT);\r\n      this.htmlRapportsContainer.append(tr);\r\n    }\r\n  }\r\n}\r\n","\r\nimport { IObserver } from \"../interfaces/Observer\";\r\nimport { Caisse } from \"./Caisse\";\r\n\r\nexport class Solde implements IObserver{\r\n    private viewSolde : HTMLDivElement\r\n    constructor(caisse : Caisse) {\r\n        this.viewSolde = document.querySelector(\"#solde\")!\r\n        caisse.subscribe(this)\r\n    }\r\n    update(caisse : Caisse) {\r\n        this.viewSolde.innerText = caisse.getSolde().toString();\r\n   \r\n    }\r\n}","export class Transaction {\r\n    constructor(\r\n        private type: string,\r\n        private montant: number,\r\n        private qui: string,\r\n        private raison: string\r\n    ) { }\r\n    text() {\r\n        return `${this.montant}F ont été ${this.type === \"Debit\" ? \"Retrait\" : \"Déposé\"} par ${this.qui} suite à ${this.raison}`\r\n    }\r\n    otherText() {\r\n        return this.qui\r\n    }\r\n    getMontant() {\r\n       return  this.montant\r\n    }\r\n    getType() {\r\n        return  this.type\r\n    }\r\n  \r\n}","import { Caisse } from \"./classes/Caisse\";\r\nimport { Etat } from \"./classes/EtatDuCompte\";\r\nimport { NbreTransaction } from \"./classes/NbreTransaction\";\r\nimport { RapportsTransactions } from \"./classes/RapportsTransactions\";\r\nimport { Solde } from \"./classes/Solde\";\r\nimport { Transaction } from \"./classes/Transaction\";\r\n\r\n//Interception du formulaire\r\nconst form = document.querySelector(\".formulaire-de-transaction\") as HTMLFormElement;\r\n//Interception du button buttonViewPersonelTransaction\r\nconst buttonViewPersonelTransaction = document.querySelector('.buttonViewPersonelTransaction') as HTMLButtonElement;\r\n//Interception du div container-rapportTransaction\r\nconst containerRapportTransactions = document.querySelector('.containerRapportTransaction') as HTMLDivElement\r\n//Instanciations\r\nlet maCaisse = new Caisse(0, []);\r\nlet monSolde = new Solde(maCaisse);\r\nlet etatDeMonCompte = new Etat(maCaisse);\r\nlet nbreDeTransaction = new NbreTransaction(maCaisse);\r\nlet rapportsTransactions = new RapportsTransactions(maCaisse);\r\n\r\n//Interception des Inputs du formulaire\r\nconst type = document.querySelector(\"#type\") as HTMLInputElement;\r\nconst qui = document.querySelector('#qui') as HTMLInputElement;\r\nconst montant = document.querySelector(\"#montant\") as HTMLInputElement;\r\nconst raison = document.querySelector(\"#raison\") as HTMLInputElement;\r\n//Interception du Ul\r\nconst ul = document.querySelector(\"ul\")!;\r\n\r\n//Implémentation du formulaire\r\nform.addEventListener('submit', (e: Event) => {\r\n    e.preventDefault();\r\n  let mesTransactions = new Transaction(\r\n      type.value,\r\n      montant.valueAsNumber,\r\n      qui.value,\r\n      raison.value\r\n  );\r\n  maCaisse.AjoutTransaction(mesTransactions);\r\n  maCaisse.getEtatCompte();\r\n  \r\n  //Implémentation du render géreant le rendu de la liste des transactions\r\n  const render = (Tr:Transaction, container: HTMLUListElement) => {\r\n    let li = document.createElement(\"li\");\r\n    let h4 = document.createElement(\"h4\");\r\n    let p = document.createElement(\"p\");\r\n  \r\n    h4.innerText = Tr.getType() === 'Debit' ? 'Debit' : 'Credit';\r\n    h4.className = Tr.getType();\r\n    li.className = Tr.getType();\r\n    p.innerText = Tr.text();\r\n    li.append(h4);\r\n    li.append(p);\r\n    ul.append(li);\r\n    container.append(li);\r\n  };\r\n  //Reset les inputs du formulaire\r\n  const reset = 0;\r\n  montant.valueAsNumber = reset;\r\n  qui.value = \"\";\r\n  raison.value = \"\";\r\n  render(mesTransactions, ul);\r\n});\r\n\r\n\r\n//Implémentation du bouton de Rapport \r\nbuttonViewPersonelTransaction.addEventListener('click', () => {\r\n  if (containerRapportTransactions.classList.contains('apparition')) {\r\n    containerRapportTransactions.classList.remove('apparition');\r\n     \r\n  } else if (containerRapportTransactions.classList.contains('apparition')) {\r\n    \r\n  } else\r\n  containerRapportTransactions.classList.toggle('apparition');\r\n})"]}